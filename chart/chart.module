<?php
function chart_show_all(){ ?>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.js"></script>

    <form id="theForm" name = "capform" onSubmit="JavaScript:onSubmit()" accept-charset="utf-8">
        <select id = "nodes" name= "node" onchange="showCapabilities(this.value)">
            <option value="0">Select Node:</option>

            <? for($i=1;$i< sizeof($nodes);$i++){ ?>
                <option value="<?echo $i."+".$nodes[$i-1];?>"><?echo $nodes[$i-1];?></option>
            <?  }   ?>
        </select>
        <select id="capabilities" name= "capabilities">
            <option value="0">Select Capability:</option>
        </select>
        From: <input id ="from" type="text" name="from" placeholder="2013-06-17-10-00-00">
        To:   <input id ="to" type="text" name="to" placeholder="2013-06-17-12-00-00"><br><br>
        <br><br>
        <input type="submit" id="submit" value="Show Chart" onClick="JavaScript:onSubmit()">
        <br><br>
    </form>

        <?php
        if(isset($_GET['capabilities'])&& ($_GET['capabilities']!="0")){
         $nodeUrn1 = explode(" ",urldecode($_GET["node"]));
         $nodeUrn=$nodeUrn1[1];
         $capability=$_GET["capabilities"];
         $capabilityUrn="urn:wisebed:node:capability:".$capability;

         if (($_GET['from']!=NULL)&&($_GET['to'])!=NULL){
             $from = explode('-',urldecode($_GET['from']));
             $to =explode('-',urldecode($_GET['to']));
             $date_from = mktime($from[3],$from[4],$from[5],$from[1],$from[2],$from[0])*1000;
             $date_to = mktime($to[3],$to[4],$to[5],$to[1],$to[2],$to[0])*1000;
             chart_graph($nodeUrn,$capabilityUrn,$date_from,$date_to);
         }else{
             chart_graph($nodeUrn,$capabilityUrn,0,0);
         }
      }//end if
        ?>
    <script type="text/javascript">
        var capability= new Array();
        var cap = new Array();
        var opt= new Array();
        <?php
            unset($lines);
            $raw = file_get_contents("http://uberdust.cti.gr/rest/testbed/1/status/raw");
            $lines= explode("\n",$raw);
            $k=0;
            $nodes=array();
            $nodes[0]=" ";
            for($i=0;$i<sizeof($lines);$i++){
                $node=explode("\t",$lines[$i]);
                if(!(in_array($node[0],$nodes))){
                    $nodes[$k]=$node[0];
                    if($i!=0){echo '";';}
                    echo 'capability['.$k.'+1]="';
                    $k++;
                }
                if (isset($node[1])==1){
                    $nodecap = explode(":",$node[1]);
                }
                unset($node);
                if ((isset($nodecap[4])==1)&&($nodecap[0]== "urn")){
                    echo $nodecap[4].' ';
                    unset($nodecap);
                }
            }
            echo '";';
        ?>

        function showCapabilities(str)
        {
            opt= document.getElementById("nodes").value.split("+");
            option= opt[0];
            if(option =="0"){
                document.capform.capabilities.options[0]=new Option("Select Capability:","0");
                document.capform.capabilities.options.length=1;
            }else{

                document.capform.capabilities.options[0]=new Option("Select Capability:","0");
                cap=capability[option].split(" ");
                for(var i=0;i<cap.length;i++){
                    document.capform.capabilities.options[i+1]=new Option(cap[i], cap[i]);
                }
                document.capform.capabilities.options.length=cap.length;
            }
        }

        function onSubmit()
        {   nodes=document.getElementById("nodes").value;
            capabilities=document.getElementById("capabilities").value;
            submit=document.getElementById("submit").value;
            from= document.getElementById("from").value;
            to= document.getElementById("to").value;

            var xmlhttp;
            if (window.XMLHttpRequest)
            {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp=new XMLHttpRequest();
            }
            else
            {// code for IE6, IE5
                xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange=function()
            {
                if (xmlhttp.readyState==4 && xmlhttp.status==200)
                {
                    document.getElementById("container").innerHTML=xmlhttp.responseText;
                }
            }
            xmlhttp.open("GET","chart.php?t=" + Math.random()+"&node="+nodes+"&capabilities="+capabilities+"&from="+from+"&to="+to,true);
            xmlhttp.send();

        }

    </script>
<?php
}//end of function

function chart_graph($node,$capability,$from,$to){
    $node_prefix="";
    $cap_prefix="";
    $temp_node  =explode(":",$node);
    $temp_capability = explode(":",$capability);
    for($i=0;$i<count($temp_node)-1;$i++){
        $node_prefix=$node_prefix.$temp_node[$i].":";
    }
    for($i=0;$i<count($temp_capability)-1;$i++){
        $cap_prefix=$cap_prefix.$temp_capability[$i].":";
    }
    $node = $temp_node[count($temp_node)-1];
    $capability = $temp_capability[count($temp_capability)-1];
    ?>
    <script>
        var chart;
        $(document).ready(function() {
            chart = new Highcharts.Chart({
                chart: {
                    renderTo: '<?php echo $node_prefix.$node."_".$cap_prefix.$capability;?>',
                    defaultSeriesType: 'spline',
                    zoomType: 'x',
                    spacingRight: 20
                },
                title: {
                    text: '<?=$capability?> chart inside <?=$node?>'

                },
                credits: {
                    enabled: false
                },

                xAxis: {
                    title: {
                        text: 'GMT'
                    },
                    type: 'datetime',
                    dateTimeLabelFormats: {
                        day: '%e %b',
                        month: '%e %b'
                    },
                    tickPixelInterval: 400,
                    maxZoom: 1000
                },
                yAxis: {
                    title: {
                        text: '<?= $capability?>'
                    },
                    min: 0.6,
                    startOnTick: false,
                    showFirstLabel: false
                },
                tooltip: {
                    shared: true
                },
                legend: {
                    enabled: false
                },
                exporting: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        lineWidth: 1,
                        marker: {
                            enabled: false,
                            states: {
                                hover: {
                                    enabled: true,
                                    radius: 5
                                }
                            }
                        }
                    }
                },
                series: [
                    {
                        name: '<?= $capability?> reading',
                        data: [
                            <?
                            if(($from==0)&&($to==0))
                            {
                                 $tabdelimited = file_get_contents("http://uberdust.cti.gr/rest/testbed/1/node/".$node_prefix.$node."/capability/".$cap_prefix.$capability."/tabdelimited/limit/10");
                            }else{
                                  $tabdelimited = file_get_contents("http://uberdust.cti.gr/rest/testbed/1/node/".$node_prefix.$node."/capability/".$cap_prefix.$capability."/tabdelimited/from/".$from."/to/".$to."/");

                            }
                            $lines = explode("\n", $tabdelimited);
                            unset($lines[count($lines)-1]);

                            $firstRow = explode("\t", $lines[0]);
                            unset($lines[0]);
                            $data="[".$firstRow[0]." , ".$firstRow[1]."]";
                            foreach ($lines as $thisLine) {
                                 $row = explode("\t", $thisLine);
                                 $data=" [".$row[0]." , ".$row[1]."],".$data;
                            }
                            print($data);

                            ?>
                        ]
                    }
                ]
            });
        });
    </script>
    <div id="<?php echo $node_prefix.$node."_".$cap_prefix.$capability;?>"></div><br><br>

<?php
}//end of graph()
